@model WebApplication5.Models.post

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var db = new WebApplication5.Models.BlogEntities();
}

<h2>Create</h2>
<button type="button" class="btn btn-primary" id="preview">Preview</button>

@using (Html.BeginForm("Create","Post",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.RawContent, new { @class = "form-control",  @hidden = true})
            @Html.ValidationMessageFor(model => model.RawContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.content, new { @class = "form-control", @id = "postContent" })
            @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.categoryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.categoryId, db.Categories.Select(x => new SelectListItem { Text = x.CatName, Value = x.id.ToString() }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.tag, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tag, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2", @id = "txtImages" })
        <div class="col-md-10">
            <input type="file" name="image" id="Image" style="width:100%" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    var editor = CKEDITOR.replace("postContent");
    editor.on('change', function () {
        var content = CKEDITOR.instances.postContent.document.getBody().getText();
        console.log(content);
        $("#RawContent").val(content);
    });
</script>